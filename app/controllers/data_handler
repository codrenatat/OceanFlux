const fs = require("fs");
const path = require('node:path');

const productsDataPath = path.join(__dirname, '     ');

function getHotels() {
  const hotelsData = fs.readFileSync(productsDataPath, 'utf-8');
  const hotels = JSON.parse(hotelsData);
  return hotels;
}

function createHotel(hotel) {
  try {
    console.log('Hotel creado');
    const hotelsData = fs.readFileSync(productsDataPath, 'utf8');
    const hotels = JSON.parse(hotelsData);
    hotels.hotels.push(hotel);
    fs.writeFileSync(productsDataPath, JSON.stringify(hotels, null, 2));
    console.log('Hotel agregado');
  } catch (error) {
    console.error('Error al crear el hotel:', error);
  }
}

function updateHotel(id, updatedHotel) {
  try {
    console.log('Hotel actualizado');
    const hotelsData = fs.readFileSync(productsDataPath, 'utf8');
    const hotels = JSON.parse(hotelsData);

    const hotelToUpdate = hotels.hotels.find((hotel) => hotel._uuid === id);

    if (hotelToUpdate) {
      // Modifica las propiedades del hotel segÃºn tus necesidades
      // ...

      fs.writeFileSync(productsDataPath, JSON.stringify(hotels, null, 2));
      console.log('Hotel actualizado');
    }
  } catch (error) {
    console.error('Error al actualizar el hotel:', error);
  }
}


function deleteHotel(id) {
  try {
    const hotelsData = fs.readFileSync(productsDataPath, 'utf8');
    const hotels = JSON.parse(hotelsData);

    const index = hotels.hotels.findIndex((hotel) => hotel._uuid === id);

    if (index !== -1) {
      hotels.hotels.splice(index, 1);
      fs.writeFileSync(productsDataPath, JSON.stringify(hotels, null, 2));
      console.log('Hotel eliminado');
    }
  } catch (error) {
    console.error('Error al eliminar el hotel:', error);
  }
}


// Operaciones relacionadas con viajes
function getViajes() {
  const viajesData = fs.readFileSync(viajesDataPath, 'utf-8');
  const viajes = JSON.parse(viajesData);
  return viajes;
}


function deleteViaje(id) {
  try {
    const viajesData = fs.readFileSync(viajesDataPath, 'utf8');
    const viajes = JSON.parse(viajesData);

    const index = viajes.viajes.findIndex((viaje) => viaje._uuid === id);

    if (index !== -1) {
      viajes.viajes.splice(index, 1);
      fs.writeFileSync(viajesDataPath, JSON.stringify(viajes, null, 2));
      console.log('Viaje eliminado');
    }
  } catch (error) {
    console.error('Error al eliminar el viaje:', error);
  }
}



module.exports = {
  getHotels,
  createHotel,
  updateHotel,
  deleteHotel,
  getViajes,
  createViaje,
  updateViaje,
  deleteViaje,
  findViaje,
};



